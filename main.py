import discord
from discord.ext import commands, tasks
from discord import app_commands
from typing import Optional
import os
import aiohttp
from flask import Flask
from threading import Thread

# Flask server
app = Flask('')

@app.route('/')
def home():
    return "Bot is running!"

def run():
    app.run(host='0.0.0.0', port=8080)

def keep_alive():
    t = Thread(target=run)
    t.daemon = True
    t.start()

# Discord bot
intents = discord.Intents.default()
intents.members = True
bot = commands.Bot(command_prefix='!', intents=intents)

@bot.event
async def on_ready():
    activity = discord.Activity(
        type=discord.ActivityType.watching,
        name="hoa ·ªü v∆∞·ªùn hoa b√°ch h·ª£p"
    )
    await bot.change_presence(status=discord.Status.online, activity=activity)
    print(f'Bot ƒë√£ ƒëƒÉng nh·∫≠p d∆∞·ªõi t√™n: {bot.user}')
    try:
        synced = await bot.tree.sync()
        print(f"Synced {len(synced)} commands")
    except Exception as e:
        print(f"Error syncing: {e}")

# Slash command: /say channel: #channel message: "text"
@bot.tree.command(name="say", description="Bot s·∫Ω g·ª≠i n·ªôi dung v√† ·∫£nh (n·∫øu c√≥) v√†o k√™nh ch·ªâ ƒë·ªãnh")
@app_commands.describe(
    channel="K√™nh mu·ªën g·ª≠i tin",
    message="N·ªôi dung tin nh·∫Øn",
    image="(T√πy ch·ªçn) ·∫¢nh ƒë√≠nh k√®m"
)
async def say(
    interaction: discord.Interaction,
    channel: discord.TextChannel,
    message: str,
    image: Optional[discord.Attachment] = None
):
    user = interaction.guild.get_member(interaction.user.id)
    bot_member = interaction.guild.me

    if user is None:
        await interaction.response.send_message("Kh√¥ng th·ªÉ x√°c ƒë·ªãnh vai tr√≤ c·ªßa b·∫°n.", ephemeral=True)
        return

    if user.top_role <= bot_member.top_role:
        await interaction.response.send_message("B·∫°n c·∫ßn c√≥ vai tr√≤ cao h∆°n bot ƒë·ªÉ d√πng l·ªánh n√†y.", ephemeral=True)
        return

    # G·ª≠i ph·∫£n h·ªìi tr∆∞·ªõc (ph·∫£n h·ªìi b·∫Øt bu·ªôc)
    await interaction.response.send_message(f"ƒêang g·ª≠i v√†o {channel.mention}...", ephemeral=True)

    # Sau ƒë√≥ g·ª≠i v√†o k√™nh
    if image and image.content_type and image.content_type.startswith("image/"):
        await channel.send(content=message, file=await image.to_file())
    else:
        await channel.send(content=message)

@bot.tree.command(name="say_in_thread", description="G·ª≠i tin v√†o m·ªôt ch·ªß ƒë·ªÅ c·ª• th·ªÉ theo ID")
@app_commands.describe(
    thread_id="ID c·ªßa ch·ªß ƒë·ªÅ",
    message="N·ªôi dung c·∫ßn g·ª≠i",
    image="(T√πy ch·ªçn) ·∫¢nh ƒë√≠nh k√®m"
)
async def say_in_thread(
    interaction: discord.Interaction,
    thread_id: str,
    message: str,
    image: Optional[discord.Attachment] = None
):
    guild = interaction.guild
    user = guild.get_member(interaction.user.id)
    bot_member = guild.me

    # Ki·ªÉm tra vai tr√≤
    if user is None or bot_member is None:
        await interaction.response.send_message("Kh√¥ng th·ªÉ x√°c ƒë·ªãnh vai tr√≤.", ephemeral=True)
        return

    if user.top_role <= bot_member.top_role:
        await interaction.response.send_message("B·∫°n c·∫ßn c√≥ vai tr√≤ **cao h∆°n bot** ƒë·ªÉ d√πng l·ªánh n√†y.", ephemeral=True)
        return

    # T√¨m ch·ªß ƒë·ªÅ theo ID
    try:
        thread = guild.get_thread(int(thread_id))
    except ValueError:
        await interaction.response.send_message("ID kh√¥ng h·ª£p l·ªá.", ephemeral=True)
        return

    if thread is None:
        await interaction.response.send_message("Kh√¥ng t√¨m th·∫•y ch·ªß ƒë·ªÅ c√≥ ID ƒë√≥.", ephemeral=True)
        return

    await interaction.response.send_message(f"ƒêang g·ª≠i v√†o ch·ªß ƒë·ªÅ **{thread.name}**...", ephemeral=True)

    # G·ª≠i n·ªôi dung v√† ·∫£nh (n·∫øu c√≥)
    if image and image.content_type and image.content_type.startswith("image/"):
        await thread.send(content=message, file=await image.to_file())
    else:
        await thread.send(content=message)    
    

@bot.event
async def on_member_join(member):
    channel = discord.utils.get(member.guild.text_channels, name='hello-goodbye')
    role_channel = discord.utils.get(member.guild.text_channels, name='role')  # T√™n k√™nh ch·ªçn role

    if member.bot:
        role = discord.utils.get(member.guild.roles, name="Bot")
        if role:
            await member.add_roles(role)

    elif channel:
        role_mention = role_channel.mention if role_channel else "`role`"

        embed = discord.Embed(
            title="üëã Ch√†o m·ª´ng m·ªôt ƒë·ªìng m√¥n m·ªõi ƒë√£ ƒë·∫∑t ch√¢n v√†o l√£nh ƒë·ªãa!",
            description=(
                f"{member.mention} ƒë√£ tham gia server **{member.guild.name}**!\n\n"
                "üåü N∆°i b·∫°n c√≥ th·ªÉ giao l∆∞u v·ªõi d√†n nh√¢n s·ª± v√† fan c·ªßa team ch·∫Øc v·∫≠y.\n\n"
                f"üìå **Nh·ªõ sang k√™nh {role_mention} ƒë·ªÉ ch·ªçn vai tr√≤ v√† c√≥ th·ªÉ nh·∫Øn trong server nh√©!**"
            ),
            color=0x00ffcc
        )

        if member.avatar:
            embed.set_thumbnail(url=member.avatar.url)
        else:
            embed.set_thumbnail(url=member.default_avatar.url)

        embed.set_image(url="https://get.wallhere.com/photo/anime-anime-girls-sky-clouds-school-uniform-Yuru-Yuri-Akaza-Akari-Yoshikawa-Chinatsu-Funami-Yui-Toshinou-Kyouko-cloud-screenshot-extreme-sport-250233.jpg")

        await channel.send(embed=embed)


@bot.event
async def on_member_remove(member):
    channel = discord.utils.get(member.guild.text_channels, name='hello-goodbye')
    if channel:
        embed = discord.Embed(
            title="üëã T·∫°m bi·ªát!",
            description=(
                f"üí® {member.name} ƒë√£ r·ªùi kh·ªèi **{member.guild.name}**...\n"
                "Mong c√≥ d·ªãp g·∫∑p l·∫°i b·∫°n trong t∆∞∆°ng lai!"
            ),
            color=0xff5555
        )

        if member.avatar:
            embed.set_thumbnail(url=member.avatar.url)
        else:
            embed.set_thumbnail(url=member.default_avatar.url)

        embed.set_image(url="https://i.ibb.co/Ngk051kP/lily2-waifu2x-art-noise3-scale.png")

        embed.set_footer(text="M·ªôt ng∆∞·ªùi r·ªùi ƒëi, nhi·ªÅu k·ª∑ ni·ªám ·ªü l·∫°i...")

        await channel.send(embed=embed)

@bot.event
async def on_member_update(before, after):
    booster_role = discord.utils.get(after.guild.roles, name="Server Booster")

    if booster_role:
        if booster_role not in before.roles and booster_role in after.roles:
            channel = discord.utils.get(after.guild.text_channels, name='boost-server')
            if channel:
                embed = discord.Embed(
                    title="üíé BOOST SERVER!",
                    description=(
                        f"{after.mention}, c·∫£m ∆°n b·∫°n ƒë√£ ·ªßng h·ªô cho server **{after.guild.name}** c·ªßa t·ª•i m√¨nh! üíñ"
                    ),
                    color=0xff99cc
                )

                embed.set_thumbnail(url=after.avatar.url if after.avatar else after.default_avatar.url)

                embed.set_image(url="https://gifdb.com/images/thumbnail/thank-you-anime-girl-cute-dance-love-vjx4h36muzs0rps0.gif")

                embed.set_footer(text="C·∫£m ∆°n v√¨ s·ª± ·ªßng h·ªô c·ªßa b·∫°n!")

                await channel.send(embed=embed)



import os
TOKEN = os.environ.get("DISCORD_TOKEN") # ƒê·∫£m b·∫£o ƒë√£ ƒë·∫∑t bi·∫øn m√¥i tr∆∞·ªùng n√†y
keep_alive()    
bot.run(TOKEN)
